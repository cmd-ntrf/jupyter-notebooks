#!/bin/bash

set -eo pipefail

########################################################################
# INFO: Install everything that's required for Jupyter notebooks here.
########################################################################

# Ensure we are using the latest pip and wheel packages.

pip install --no-cache-dir -U pip setuptools wheel

# Install base packages needed for running Jupyter Notebooks.

pip install --no-cache-dir -r /tmp/src/requirements.txt

# Activate JupyterHub extension for JupyterLab.

if grep -q jupyterlab /tmp/src/requirements.txt ; then
    jupyter labextension install @jupyterlab/hub-extension
    npm cache clean --force
    rm -rf $HOME/.cache/yarn
    rm -rf $HOME/.node-gyp
fi

# Jupyter Lmod extension
if grep -q jupyterlmod /tmp/src/requirements.txt;
    jupyter nbextension install --py jupyterlmod
    if grep jupyterlab /tmp/src/requirements.txt;
        jupyter labextension install jupyterlab-lmod
        jupyter labextension disable jupyterlab-lmod
    fi
fi

# Copy into place default config files for Jupyter.

cp /tmp/src/jupyter_notebook_config.py /opt/app-root/etc/

# This S2I assemble script is only used when creating the custom image.
# For when running the image, or using it as a S2I builder, we use a second
# set of custom S2I scripts. We now need to move these into the correct
# location and have the custom image use those by dropping in an image
# metadata file which overrides the labels of the base image.

mkdir -p /tmp/.s2i

mv /tmp/src/builder/image_metadata.json /tmp/.s2i/image_metadata.json

mv /tmp/src/builder /opt/app-root/builder

mv /tmp/src/*.sh /opt/app-root/bin

# Ensure passwd/group file intercept happens for any shell environment.

echo "source /opt/app-root/etc/generate_container_user" >> /opt/app-root/etc/scl_enable

# Create additional directories.

echo " -----> Creating additional directories."

mkdir -p /opt/app-root/data

########################################################################
# WARNING: Don't do anything beyond this point that relies on Python.
########################################################################

# Make sure the S2I source directory is empty as we will use the image
# produced to run further S2I builds.

rm -rf /tmp/src

# Fixup permissions on directories and files.

fix-permissions /opt/app-root
